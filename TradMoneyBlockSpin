local v0=game:GetService("Players");local v1=game:GetService("PathfindingService");local v2=game:GetService("VirtualInputManager");local v3=v0.LocalPlayer;local v4=v3.Character or v3.CharacterAdded:Wait() ;local v5=v4:WaitForChild("Humanoid");local v6=v4:WaitForChild("HumanoidRootPart");local v7=Vector3.new(120.47,255.32,469.67);local function v8(v13) for v26,v27 in ipairs(v13:GetChildren()) do if (v27.Name=="DoorSystem") then v27:Destroy();else v8(v27);end end end local function v9(v14,v15,v16) return (v14-v15).Magnitude<=v16 ;end local function v10(v17,v18,v19) v17:MoveTo(v18);local v20=false;local v21;local v22=tick();v21=v17.MoveToFinished:Connect(function(v28) v20=v28;v21:Disconnect();end);while  not v20 and ((tick() -v22)<v19)  do task.wait(0.1);end if  not v20 then v21:Disconnect();end return v20;end local function v11(v23) v2:SendKeyEvent(true,Enum.KeyCode.LeftShift,false,game);local v24=v1:CreatePath({AgentRadius=2,AgentHeight=5,AgentCanJump=true,AgentMaxSlope=45});v24:ComputeAsync(v6.Position,v23);if (v24.Status==Enum.PathStatus.Success) then local v31=v24:GetWaypoints();for v32,v33 in ipairs(v31) do if (v33.Action==Enum.PathWaypointAction.Jump) then v5:ChangeState(Enum.HumanoidStateType.Jumping);end local v34=v10(v5,v33.Position,5);if  not v34 then break;end end end v2:SendKeyEvent(false,Enum.KeyCode.LeftShift,false,game);end local function v12(v25) while true do if ( not v3.Character or  not v3.Character.Parent) then v3.CharacterAdded:Wait();v4=v3.Character;v5=v4:WaitForChild("Humanoid");v6=v4:WaitForChild("HumanoidRootPart");end v4=v3.Character;v5=v4:WaitForChild("Humanoid");v6=v4:WaitForChild("HumanoidRootPart");local v30=(v6.Position-v25).Magnitude;if (v30>10) then v11(v25);else task.wait(0.2);end end end v8(workspace.Map.Tiles);task.wait(0.1);v12(v7);
